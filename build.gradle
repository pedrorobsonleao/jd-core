apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    // Changed testCompile to testImplementation for all test dependencies
    testImplementation 'commons-codec:commons-codec:1.13'
    testImplementation 'org.apache.commons:commons-collections4:4.1'
    testImplementation 'org.apache.commons:commons-imaging:1.0-alpha2'
    testImplementation 'org.apache.commons:commons-lang3:3.18.0'
    testImplementation 'com.jakewharton:disklrucache:2.0.2'
    testImplementation 'com.squareup:javapoet:1.11.1'
    testImplementation 'com.squareup:javawriter:2.5.1'
    testImplementation 'joda-time:joda-time:2.10.5'
    testImplementation 'org.joda:joda-convert:2.2.1'
    testImplementation 'org.jsoup:jsoup:1.15.3'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'javax.jms:javax.jms-api:2.0.1'
    testImplementation 'javax.mail:javax.mail-api:1.6.2'
    testImplementation 'com.squareup.mimecraft:mimecraft:1.1.1'
    testImplementation 'org.scribe:scribe:1.3.7'
    testImplementation 'com.sparkjava:spark-core:2.9.1'
    testImplementation 'log4j:log4j:1.2.17'
    testImplementation 'com.google.guava:guava:32.0.1-android'
}

version='1.1.4'

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-Xlint:deprecation'
    options.compilerArgs << '-Xlint:unchecked'
    options.encoding = 'UTF-8'
}

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes 'JD-Core-Version': version
    }
}

// Fixed sourceJar task configuration
task sourceJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.jd'
            artifactId = 'jd-core'
            version = project.version
            from components.java
            artifact sourceJar
        }
    }
    repositories {
        mavenLocal()
    }
}

// 'cleanIdea' task extension
cleanIdea.doFirst {
    delete project.name + '.iws'
    delete 'out'
    followSymlinks = true
}
